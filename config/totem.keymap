//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

#define AS(keycode) &as LS(keycode) keycode     // Autoshift Macro

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
};

&lt {
    quick-tap-ms = <180>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <8 9>;
        };
    };

    macros {
        gif: gif {
            label = "giphy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp G &kp I &kp F>;
        };
    };

    behaviors {
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_TOG";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        caps_hold: caps_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "CAPS_HOLD";
            bindings = <&kp>, <&caps_word>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <135>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
             &kp Q       &kp W       &kp E         &kp R        &kp T          &kp Y        &kp U            &kp I         &kp O       &kp P
             &mt LGUI A  &mt LALT S  &mt LCTRL D   &mt LSHFT F  &kp G          &kp H        &mt RSHFT J      &mt RCTRL K   &mt RALT L  &mt RGUI SEMICOLON
&mo_tog 6 6  &kp Z       &kp X       &kp C         &kp V        &kp B          &kp N        &kp M            &kp COMMA     &kp DOT     &kp FSLH            &kp BSLH
                                     &lt 3 ESCAPE  &lt 2 TAB    &lt 1 SPACE    &lt 4 SPACE  &lt 5 BACKSPACE  &lt 6 DELETE
            >;
        };

        sym_type {
            bindings = <
       &none     &none     &none      &none      &kp TAB      &kp UNDERSCORE  &kp DOUBLE_QUOTES  &kp AT_SIGN      &mt DOLLAR RA(NUMBER_5)  &kp PERCENT
       &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &kp SPACE    &kp MINUS       &kp SQT            &kp EXCLAMATION  &kp QUESTION             &kp COLON
&none  &none     &none     &none      &none      &kp ENTER    &kp TILDE       &kp GRAVE          &kp HASH         &none                    &kp ASTERISK  &none
                           &none      &none      &none        &kp ENTER       &kp BACKSPACE      &kp DELETE
            >;

            label = "SYMT";
        };

        navigation {
            bindings = <
       &none         &none         &none             &none           &none    &kp PG_UP  &kp HOME  &kp UP      &kp END    &kp PRINTSCREEN
       &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none    &kp PG_DN  &kp LEFT  &kp DOWN    &kp RIGHT  &kp INS
&none  &none         &none         &none             &none           &none    &kp INS    &none     &none       &none      &none            &none
                                   &none             &none           &none    &kp RET    &kp BSPC  &kp DELETE
            >;

            label = "nav";
        };

        adjust_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "ADJ";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃   RESET   ┃ BT CLEAR  ┃  OUT TOG  ┃           ┃           ┃   ┃           ┃    F7     ┃    F8     ┃    F9     ┃    F12    ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃ BOOTLOAD  ┃ BT NEXT   ┃           ┃           ┃           ┃   ┃           ┃    F4     ┃    F5     ┃    F6     ┃    F11    ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃ BT PREV   ┃           ┃           ┃           ┃   ┃           ┃    F1     ┃    F2     ┃    F3     ┃    F10    ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
       &sys_reset   &bt BT_CLR  &out OUT_TOG  &none  &none    &none    &kp F7    &kp F8   &kp F9  &kp F12
       &bootloader  &bt BT_NXT  &none         &none  &none    &none    &kp F4    &kp F5   &kp F6  &kp F11
&none  &none        &bt BT_PRV  &none         &none  &none    &none    &kp F1    &kp F2   &kp F3  &kp F10  &none
                                &none         &none  &none    &kp RET  &kp BSPC  &kp DEL
            >;
        };

        sym_code {
            bindings = <
       &mt LCTRL ASTERISK  &kp LEFT_BRACE              &kp COLON             &kp RIGHT_BRACE                 &kp AMPERSAND    &kp ENTER      &none      &none      &none     &none
       &kp EXCLAMATION     &kp LEFT_PARENTHESIS        &mt PLUS EQUAL        &kp RIGHT_PARENTHESIS           &kp QUESTION     &kp BACKSPACE  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
&none  &kp DOLLAR          &mt LESS_THAN LEFT_BRACKET  &mt UNDERSCORE MINUS  &mt GREATER_THAN RIGHT_BRACKET  &kp PIPE         &kp DELETE     &none      &none      &none     &none     &none
                                                       &mt HASH BACKSLASH    &kp TAB                         &kp SPACE        &none          &none      &none
            >;

            label = "SYMC";
        };

        numbers {
            bindings = <
       &kp N1      &kp N2     &kp N3      &kp N4       &kp N5        &kp ENTER      &none            &none      &none          &none
       &kp N6      &kp N7     &kp N8      &kp N9       &kp N0        &kp BACKSPACE  &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp RGUI
&none  &kp K_UNDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &kp K_REDO    &kp DELETE     &none            &none      &none          &none     &none
                              &caps_word  &kp TAB      &kp SPACE     &none          &none            &none
            >;

            label = "num";
        };

        idea {
            bindings = <
       &trans         &trans         &trans         &trans         &trans      &kp LG(LS(Q))  &kp N7      &kp N8  &kp N9  &kp PLUS
       &kp LS(LSHFT)  &kp LC(N)      &kp LS(LC(N))  &kp LS(LC(A))  &trans      &trans         &kp N4      &kp N5  &kp N6  &kp MINUS
&to 0  &kp LA(LC(M))  &kp LA(LC(P))  &kp LA(LC(C))  &kp LA(LC(V))  &trans      &trans         &kp N1      &kp N2  &kp N3  &kp ASTERISK  &kp KP_DIVIDE
                                     &kp LS(LGUI)   &kp LA(LGUI)   &kp LGUI    &kp ENTER      &kp KP_DOT  &kp N0
            >;

            label = "idea";
        };

        symbols {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "SYM";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃           ┃           ┃     UP    ┃           ┃     {     ┃   ┃     }     ┃     7     ┃     8     ┃     9     ┃     +     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃   SHIFT   ┃   LEFT    ┃    DOWN   ┃   RIGHT   ┃     [     ┃   ┃     ]     ┃     4     ┃     5     ┃     6     ┃     -     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃   P UP    ┃  C LOCK   ┃  P DOWN   ┃     (     ┃   ┃     )     ┃     1     ┃     2     ┃     3     ┃     *     ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃    TAB    ┃    SPC    ┃   ┃    DEL    ┃     0     ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
            &kp EXCLAMATION  &kp AT_SIGN  &kp HASH   &kp DOLLAR            &kp PERCENT          &kp LCTRL          &kp AMPERSAND          &kp ASTERISK          &kp MINUS         &kp EQUAL
            &kp QUESTION     &kp PLUS     &kp FSLH   &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET     &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp NON_US_BACKSLASH  &kp UNDERSCORE    &kp COLON
&kp RA(N5)  &kp PIPE         &trans       &trans     &kp LEFT_BRACE        &kp LESS_THAN        &kp GREATER_THAN   &kp RIGHT_BRACE        &kp LESS_THAN         &kp GREATER_THAN  &kp QUESTION  &kp PIPE
                                          &kp GRAVE  &kp SQT               &kp DOUBLE_QUOTES    &kp DOUBLE_QUOTES  &kp APOS               &kp GRAVE
            >;
        };
    };
};
